// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: common.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TridentType int32

const (
	// 1: process 2: vm 3: public cloud 4: analyzer 5: physical machine 6: dedicated physical machine 7: host pod 8: vm pod
	TridentType_TT_UNKNOWN                    TridentType = 0
	TridentType_TT_PROCESS                    TridentType = 1
	TridentType_TT_VM                         TridentType = 2
	TridentType_TT_PUBLIC_CLOUD               TridentType = 3
	TridentType_TT_ANALYZER                   TridentType = 4
	TridentType_TT_PHYSICAL_MACHINE           TridentType = 5
	TridentType_TT_DEDICATED_PHYSICAL_MACHINE TridentType = 6
	TridentType_TT_HOST_POD                   TridentType = 7
	TridentType_TT_VM_POD                     TridentType = 8
	TridentType_TT_TUNNEL_DECAPSULATION       TridentType = 9
	TridentType_TT_HYPER_V_COMPUTE            TridentType = 10
	TridentType_TT_HYPER_V_NETWORK            TridentType = 11
)

var TridentType_name = map[int32]string{
	0:  "TT_UNKNOWN",
	1:  "TT_PROCESS",
	2:  "TT_VM",
	3:  "TT_PUBLIC_CLOUD",
	4:  "TT_ANALYZER",
	5:  "TT_PHYSICAL_MACHINE",
	6:  "TT_DEDICATED_PHYSICAL_MACHINE",
	7:  "TT_HOST_POD",
	8:  "TT_VM_POD",
	9:  "TT_TUNNEL_DECAPSULATION",
	10: "TT_HYPER_V_COMPUTE",
	11: "TT_HYPER_V_NETWORK",
}

var TridentType_value = map[string]int32{
	"TT_UNKNOWN":                    0,
	"TT_PROCESS":                    1,
	"TT_VM":                         2,
	"TT_PUBLIC_CLOUD":               3,
	"TT_ANALYZER":                   4,
	"TT_PHYSICAL_MACHINE":           5,
	"TT_DEDICATED_PHYSICAL_MACHINE": 6,
	"TT_HOST_POD":                   7,
	"TT_VM_POD":                     8,
	"TT_TUNNEL_DECAPSULATION":       9,
	"TT_HYPER_V_COMPUTE":            10,
	"TT_HYPER_V_NETWORK":            11,
}

func (x TridentType) Enum() *TridentType {
	p := new(TridentType)
	*p = x
	return p
}

func (x TridentType) String() string {
	return proto.EnumName(TridentType_name, int32(x))
}

func (x *TridentType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TridentType_value, data, "TridentType")
	if err != nil {
		return err
	}
	*x = TridentType(value)
	return nil
}

func (TridentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

type KubernetesAPIInfo struct {
	Type                 *string  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Info                 *string  `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	CompressedInfo       []byte   `protobuf:"bytes,3,opt,name=compressed_info,json=compressedInfo" json:"compressed_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubernetesAPIInfo) Reset()         { *m = KubernetesAPIInfo{} }
func (m *KubernetesAPIInfo) String() string { return proto.CompactTextString(m) }
func (*KubernetesAPIInfo) ProtoMessage()    {}
func (*KubernetesAPIInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}
func (m *KubernetesAPIInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubernetesAPIInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_KubernetesAPIInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *KubernetesAPIInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesAPIInfo.Merge(m, src)
}
func (m *KubernetesAPIInfo) XXX_Size() int {
	return m.Size()
}
func (m *KubernetesAPIInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesAPIInfo.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesAPIInfo proto.InternalMessageInfo

func (m *KubernetesAPIInfo) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *KubernetesAPIInfo) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

func (m *KubernetesAPIInfo) GetCompressedInfo() []byte {
	if m != nil {
		return m.CompressedInfo
	}
	return nil
}

func init() {
	proto.RegisterEnum("common.TridentType", TridentType_name, TridentType_value)
	proto.RegisterType((*KubernetesAPIInfo)(nil), "common.KubernetesAPIInfo")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xdf, 0x8a, 0xd3, 0x40,
	0x18, 0xc5, 0x37, 0xdd, 0x3f, 0x9a, 0xaf, 0xeb, 0x76, 0x9c, 0x05, 0x77, 0x41, 0x0c, 0xab, 0x37,
	0x2e, 0x82, 0xdb, 0x47, 0x90, 0xd9, 0xc9, 0x40, 0x43, 0xd3, 0x99, 0x90, 0x7c, 0xd9, 0xa5, 0xbd,
	0x19, 0x6c, 0x33, 0xad, 0x05, 0x93, 0x09, 0x49, 0x8a, 0xf4, 0x09, 0x7c, 0x05, 0x1f, 0xc9, 0x4b,
	0x1f, 0x41, 0xea, 0x8b, 0x48, 0xd2, 0xa2, 0xa0, 0x77, 0xe7, 0xfc, 0xce, 0x99, 0x33, 0x17, 0x1f,
	0x9c, 0x2f, 0x6c, 0x9e, 0xdb, 0xe2, 0xae, 0xac, 0x6c, 0x63, 0xe9, 0xd9, 0xde, 0xbd, 0xc9, 0xe0,
	0xf9, 0x78, 0x33, 0x37, 0x55, 0x61, 0x1a, 0x53, 0xb3, 0x28, 0x08, 0x8a, 0xa5, 0xa5, 0x14, 0x4e,
	0x9a, 0x6d, 0x69, 0xae, 0x9d, 0x1b, 0xe7, 0xd6, 0x8d, 0x3b, 0xdd, 0xb2, 0x75, 0xb1, 0xb4, 0xd7,
	0xbd, 0x3d, 0x6b, 0x35, 0x7d, 0x0b, 0x83, 0x85, 0xcd, 0xcb, 0xca, 0xd4, 0xb5, 0xc9, 0x74, 0x17,
	0x1f, 0xdf, 0x38, 0xb7, 0xe7, 0xf1, 0xc5, 0x5f, 0xdc, 0x0e, 0xbe, 0xfb, 0xda, 0x83, 0x3e, 0x56,
	0xeb, 0xcc, 0x14, 0x0d, 0xb6, 0x63, 0x17, 0x00, 0x88, 0x3a, 0x95, 0x63, 0xa9, 0x1e, 0x25, 0x39,
	0x3a, 0xf8, 0x28, 0x56, 0x5c, 0x24, 0x09, 0x71, 0xa8, 0x0b, 0xa7, 0x88, 0xfa, 0x61, 0x42, 0x7a,
	0xf4, 0x12, 0x06, 0x6d, 0x94, 0xde, 0x87, 0x01, 0xd7, 0x3c, 0x54, 0xa9, 0x4f, 0x8e, 0xe9, 0x00,
	0xfa, 0x88, 0x9a, 0x49, 0x16, 0x4e, 0x67, 0x22, 0x26, 0x27, 0xf4, 0x0a, 0x2e, 0xdb, 0xd6, 0x68,
	0x9a, 0x04, 0x9c, 0x85, 0x7a, 0xc2, 0xf8, 0x28, 0x90, 0x82, 0x9c, 0xd2, 0xd7, 0xf0, 0x0a, 0x51,
	0xfb, 0xc2, 0x0f, 0x38, 0x43, 0xe1, 0xff, 0x5f, 0x39, 0x3b, 0x8c, 0x8d, 0x54, 0x82, 0x3a, 0x52,
	0x3e, 0x79, 0x42, 0x9f, 0x81, 0xdb, 0xfd, 0xde, 0xd9, 0xa7, 0xf4, 0x25, 0x5c, 0x21, 0x6a, 0x4c,
	0xa5, 0x14, 0xa1, 0xf6, 0x05, 0x67, 0x51, 0x92, 0x86, 0x0c, 0x03, 0x25, 0x89, 0x4b, 0x5f, 0x00,
	0x6d, 0x1f, 0x4f, 0x23, 0x11, 0xeb, 0x07, 0xcd, 0xd5, 0x24, 0x4a, 0x51, 0x10, 0xf8, 0x87, 0x4b,
	0x81, 0x8f, 0x2a, 0x1e, 0x93, 0xfe, 0xfd, 0x87, 0xef, 0x3b, 0xcf, 0xf9, 0xb1, 0xf3, 0x9c, 0x9f,
	0x3b, 0xcf, 0xf9, 0xf6, 0xcb, 0x3b, 0x9a, 0xbd, 0x5f, 0xad, 0x9b, 0x4f, 0x9b, 0xf9, 0xdd, 0xc2,
	0xe6, 0xc3, 0xcc, 0x98, 0x72, 0xf9, 0xd9, 0x7e, 0xd9, 0xd6, 0x7f, 0xe4, 0x30, 0x37, 0x75, 0xfd,
	0x71, 0x65, 0x86, 0xfb, 0x83, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x5b, 0xc9, 0x06, 0xaf, 0xc7,
	0x01, 0x00, 0x00,
}

func (m *KubernetesAPIInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubernetesAPIInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubernetesAPIInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CompressedInfo != nil {
		i -= len(m.CompressedInfo)
		copy(dAtA[i:], m.CompressedInfo)
		i = encodeVarintCommon(dAtA, i, uint64(len(m.CompressedInfo)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Info != nil {
		i -= len(*m.Info)
		copy(dAtA[i:], *m.Info)
		i = encodeVarintCommon(dAtA, i, uint64(len(*m.Info)))
		i--
		dAtA[i] = 0x12
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintCommon(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCommon(dAtA []byte, offset int, v uint64) int {
	offset -= sovCommon(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *KubernetesAPIInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		l = len(*m.Type)
		n += 1 + l + sovCommon(uint64(l))
	}
	if m.Info != nil {
		l = len(*m.Info)
		n += 1 + l + sovCommon(uint64(l))
	}
	if m.CompressedInfo != nil {
		l = len(m.CompressedInfo)
		n += 1 + l + sovCommon(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCommon(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCommon(x uint64) (n int) {
	return sovCommon(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *KubernetesAPIInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KubernetesAPIInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KubernetesAPIInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Info = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompressedInfo", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthCommon
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CompressedInfo = append(m.CompressedInfo[:0], dAtA[iNdEx:postIndex]...)
			if m.CompressedInfo == nil {
				m.CompressedInfo = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCommon(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCommon
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCommon
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCommon
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCommon
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCommon        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCommon          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCommon = fmt.Errorf("proto: unexpected end of group")
)
